setwd("C:/")
setwd("D:/R_Practice")
mydata <- loadworkbook("outcome-of-care-measures.xls")
mydata <- loadworkbook("outcome-of-care-measures.xlsx")
library(XLConnect)
mydata <- loadworkbook("outcome-of-care-measures.xlsx")
install.packages("xlsx")
mydata <- loadworkbook("outcome-of-care-measures.xlsx")
library("xlsx")
mydata <- loadworkbook("outcome-of-care-measures.xlsx")
mydata <- loadworkbook("outcome-of-care-measures.xls")
library(XLConnect)
mydata <- loadworkbook("outcome-of-care-measures.xls")
mydata <- loadworkbook("outcome-of-care-measures.xlsx")
library(XLConnect)
library(xlsx)
mydata <- loadworkbook("outcome-of-care-measures.xlsx")
library(rJava)
library(xlsxjars)
mydata <- loadworkbook("outcome-of-care-measures.xlsx")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(xlsx)
test <- read.xlsx("C:/Rtools/20150708.xls",sheetIndex=1)
View(test)
install.packages("XML")
install.packages("jsonlite")
install.packages("data.table")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("httr")
library(rhdf5)
swirl()
library(swirl)
swirl()
q()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,value,-grade)
res <- gather(students2,sex_class,count,-grade)
res
?separate()
?separate
res %>% separate(sex_class,c("sex","class"))
separate(res,sex_class,c("sex","class"))
submit()
submit()
submit()
sudents3
students3
reset()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
View(students3)
View(students2)
View(students)
students4
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
?bind_rows
bind_rows(passed,failed)
sat
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,value,-grade)
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
student3
students3
submit()
submit()
?spread
submit()
submit()
submit()
extract＿numeric("class5")
extract＿numeric("class5")
extract_numeric("class5")
submit()
submit()
studtents4
students4
submit()
submit()
submit()
passed
failed
passed <-mutate(status="passed")
passed <-mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
bind_rows(passed,failed)
sat
submit()
submit()
submit()
install_packages("lubridate")
install.packages("lubridate")
install.packages("sqldf")
install.packages("jpeg")
source('D:/R_Practice/student4.R')
View(result)
install.packages("quantmod")
library(quantmod)
amzn = getSybols("AMZN",auto.assign = FALSE)
amzn = getSymbols("AMZN",auto.assign = FALSE)
View(amzn)
sampletimes = index(amzn)
amzn[,1]
amzn[1,1]
index_t <- grep("2012",amzn[,1])
index_t <- grep("2007",amzn[1,1])
write.table(amzn,"amzn.txt",row.names = FALSE)
amzn2 <- read.csv("amzn.txt")
View(amzn2)
install.packages("usingR")
install.packages("UsingR")
library(UsingR)
hist(firstchi)
y <- 1:26
y
names(y) <- a:z
name(y) <- a:z
a:z
name(y)
names(y)
y
name(y)
names(y)
names(y) <- a
names(y) <- "a"
names(y)
names(y) <- c(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
names(y) <- c("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z")
names(y)
"a":"z"
x<-a:z
"a":"z"
Titanic
mosaic
?mosaic
??mosaic
mosaicplot(Titinic)
mosaicplot(Titanic)
latters
x <- latters
x <- letters
c(60:20)/c(1,6)
mydata <- data.frame(Name = c("Petti","Edward","Howland"), "性別" = c("F","M","M"), "age" = c(74,63,80))
mydata
class(mydata$age)
names(mydata)
x <- 1:4
x[c(1,2,2,3,3,3,4,4,4,4)]
names(x)  <- c("one","two","three","four")
x
x[3]
x[-3]
x[c("one","three")]
library(swirl)
swirl
swirl()
mylist
g = "my first list"
h = c(25,26,18,39)
j = matrix(1:6,nrow=2,byrow=T)
k = c("On","Tw","Th")
mylist = list(title=g,ages=h,j,k)
mylist
mylist[[3]][1,2]
x = matrix(1:12,nrow = 3, ncol=4)
x
dimnames(x) = list(paste("row",1:3,sep=''),paste("col",1:4),sep='')
dimnames(x) = list(paste("row",1:3,sep=''),paste("col",1:4),sep=''))
dimnames(x) = list(paste("row",1:3,sep=''),paste("col",1:4,sep=''))
x
paste("row",1:3,sep=',')
paste("row","T",sep=',')
x <- letters[1:5]
for (i in 1:length(x)) {print(x[i])}
for (i in seq_along(x)) {print(x[i])}
temp <- list(x = c(1,3,5), y = c(2,4,6), z = c("a","b"))
sapply(1:length(temp),function(u) {x <- length(temp[[u]]) x+1})
sapply(1:length(temp),function(u) {x <- length(temp[[u]]);x+1})
length(temp)
manager <- c(1, 2, 3, 4, 5)
> date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
> country <- c("US", "US", "UK", "UK", "UK")
> gender <- c("M", "F", "F", "M", "F")
> age <- c(32, 45, 25, 39, 99)
> q1 <- c(5, 3, 3, 3, 2)
> q2 <- c(4, 5, 5, 3, 2)
> q3 <- c(5, 2, 5, 4, 1)
> q4 <- c(5, 5, 5, NA, 2)
> q5 <- c(5, 5, 2, NA, 1)
manager <- c(1, 2, 3, 4, 5)
> date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
> country <- c("US", "US", "UK", "UK", "UK")
> gender <- c("M", "F", "F", "M", "F")
> age <- c(32, 45, 25, 39, 99)
> q1 <- c(5, 3, 3, 3, 2)
> q2 <- c(4, 5, 5, 3, 2)
> q3 <- c(5, 2, 5, 4, 1)
> q4 <- c(5, 5, 5, NA, 2)
> q5 <- c(5, 5, 2, NA, 1)
manager <- c(1, 2, 3, 4, 5)
+ date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
+ country <- c("US", "US", "UK", "UK", "UK")
+ gender <- c("M", "F", "F", "M", "F")
+ age <- c(32, 45, 25, 39, 99)
+ q1 <- c(5, 3, 3, 3, 2)
+ q2 <- c(4, 5, 5, 3, 2)
+ q3 <- c(5, 2, 5, 4, 1)
+ q4 <- c(5, 5, 5, NA, 2)
+ q5 <- c(5, 5, 2, NA, 1)
manager <- c(1,2,3,4,5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
(leadership <- data.frame(manager, date, country, gender, age,
+ q1, q2, q3, q4, q5,
+ stringsAsFactors=FALSE))
(leadership <- data.frame(manager, date, country, gender, age,q1, q2, q3, q4, q5,stringsAsFactors=FALSE))
is.na(leadership[,6:10])
newdata <- na.omit(leadership)
newdate
newdata
str(leadership)
(leadership2 <- data.frame(manager, date, country, gender, age,q1, q2, q3, q4, q5,stringsAsFactors=TRUE))
str(leadership2)
sort(leadership2&date)
x <- sort(leadership2&date)
x <- sort(leadership2&date[])
x <- sort(leadership2$date)
x
x <- sort(leadership$date)
x
install.packages("DMwR")
library(DMwR)
is.na(algae$mxPH)
which(is.na(algae$mxPH))
na.fail(algae$mxPH)
name_stu <- c("John", "Angela", "Bullwinkle","David","Janice","Cheryl","Reuven","Greg","Joel","Mary")
math_stu <- c(502,600,412,358,495,512,410,625,573,522)
sci_stu <- c(95,99,80,82,75,85,80,95,89,86)
eng_stu <- c(25,22,18,15,20,28,15,30,27,18)
data_stu <- data.frame(name_stu,math_stu,sci_stu,eng_stu)
View(data_stu)
?scale
z <- scale(data_stu)
z <- scale(data_stu[,2:4])
z
(score <- apply(z,1,mean))
data_stu1 <- cbind(data_stu,score)
data_stu1
(q_stu <- quantile(score,c(0.8,0.6,0.4,0.2)))
y
data_stu1$grade[score >= y[1]] <- "A"
data_stu1$grade[score >= q_stu[1]] <- "A"
data_stu1$grade[score < q_stu[1] & score >= q_stu[2]] <- "B"
data_stu1$grade[score < q_stu[2] & score >= q_stu[3]] <- "C"
data_stu1$grade[score < q_stu[3] & score >= q_stu[4]] <- "D"
data_stu1$grade[score < q_stu[4]] <- "F"
data_stu1
pop <- read.csv('http://www.census.gov/popest/data/national/totals/2012/files/
NST-EST2012-popchg2010_2012.csv')
pop <- pop[,c("Name","POPESTIMATE2010","POPESTIMATE2011","POPESTIMATE2012")]
colnames(pop)
pop
pop <- read.csv('http://www.census.gov/popest/data/national/totals/2012/files/
NST-EST2012-popchg2010_2012.csv')
pop
View(pop)
pop <- read.csv('http://www.census.gov/popest/data/national/totals/2012/files/
NST-EST2012-popchg2010_2012.csv')
pop <- pop[,c("Name","POPESTIMATE2010","POPESTIMATE2011","POPESTIMATE2012")]
colnames(pop) <- c("state",seq(2010,2012))
pop
install.packages("arules")
install.packages("tree")
install.packages("rpart")
install.packages("RWeka")
install.packages("animation")
install.packages("tm")
install.packages("wordcloud")
install.packages("igraph")
install_from_swirl("Data Analysis")
library
library(swirl)
install_from_swirl("Data Analysis")
swirl
swirl
swirl()
install_from_swirl("Data Analysis")
install_from_swirl("Exploratory_Data_Analysis")
swirl()
library(swirl)
install_from_swirl("Exploratory_Data_Analysis")
install_from_swirl("Data_Analysis")
install_from_swirl("Exploratory_Data_Analysis")
install_from_swirl("Statistical_Inference")
install_from_swirl("Regression_Modesl")
install_from_swirl("Regression_Models")
swirl
swirl()
swirl()
install_from_swirl("Open_Intro")
swirl()
q()
library(swirl)
Daniel
swirl()
swirl()
q()
library(XML)
lotto.Num <- NULL
for(i in 1:2){
url <- paste0("http://www.pilio.idv.tw/lto/list.asp?indexpage=", i)
lotto.Num <- rbind(lotto.Num, readHTMLTable(url)[[3]])
}
str(lotto.Num)
library(XML)
if (Sys.info()[1] == "Windows") {
Sys.setlocale("LC_ALL","C")
} else {
Sys.setlocale("LC_ALL","en_US.UTF-8")
}
lotto.Num <- NULL
for(i in 1:2){
url <- paste0("http://www.pilio.idv.tw/lto/list.asp?indexpage=", i)
lotto.Num <- rbind(lotto.Num, readHTMLTable(url)[[3]])
}
str(lotto.Num)
names(lotto.Num) <- iconv(names(lotto.Num),"UTF-8","BIG-5")
lotto.Num[, 3] <- as.character(lotto.Num[, 3])
str(lotto.Num)
View(lotto.Num)
install.packages("tmcn")
install.packages("tmcn", repos="http://R=Forge.R-project.org", type="source")
install.packages("tmcn", repos="http://R-Forge.R-project.org", type="source")
install.packages("tmcn", repos="http://R-Forge.R-project.org")
lotto.Num[3][1:3]
lotto.Num[[3]][1:3]
lotto.Num[, 3] <- as.character(grep(lotto.Num[, 3],"?",""))
?grep
lotto.Num[, 3] <- as.character(grep("?","",lotto.Num[, 3]))
View(lotto.Num)
library(XML)
if (Sys.info()[1] == "Windows") {
Sys.setlocale("LC_ALL","C")
} else {
Sys.setlocale("LC_ALL","en_US.UTF-8")
}
lotto.Num <- NULL
for(i in 1:2){
url <- paste0("http://www.pilio.idv.tw/lto/list.asp?indexpage=", i)
lotto.Num <- rbind(lotto.Num, readHTMLTable(url)[[3]])
}
str(lotto.Num)
names(lotto.Num) <- iconv(names(lotto.Num),"UTF-8","BIG-5")
lotto.Num2 <- lotto.Num
View(lotto.Num2)
lotto.Num2[,3]
lotto.Num2[1,3]
grep("?","",lotto.Num2[1,3])
grepl("?","",lotto.Num2[1,3])
gsub("?","",lotto.Num2[1,3])
gsub("?","",lotto.Num2[1,3])
sub("?","",lotto.Num2[1,3])
grep("?",lotto.Num2[1,3])
grep("\\?\\",lotto.Num2[1,3])
grep("*?*","",lotto.Num2[1,3])
grepl("*?*","",lotto.Num2[1,3])
gsub("*?*","",lotto.Num2[1,3])
03?
gsub("\\*?*\\","",lotto.Num2[1,3])
gsub("//*?*//","",lotto.Num2[1,3])
library(XML)
if (Sys.info()[1] == "Windows") {
Sys.setlocale("LC_ALL","C")
} else {
Sys.setlocale("LC_ALL","en_US.UTF-8")
}
lotto.Num <- NULL
for(i in 1:2){
url <- paste0("http://www.pilio.idv.tw/lto/list.asp?indexpage=1", i)
lotto.Num <- rbind(lotto.Num, readHTMLTable(url)[[3]])
}
str(lotto.Num)
names(lotto.Num) <- iconv(names(lotto.Num),"UTF-8","BIG-5")
str(lotto.Num)
lotto.Num2[1,3]
lotto.Num[1,3]
y<-as.character(lotto.Num[1,3])
y
strings(y)
length(y)
nchar(y)
gsub("?","",y)
strsplit(y,split=",",fixed=T)
z <- strsplit(y,split=",",fixed=T)
z
z[[1]][1]
class(z[[1]][1])
substr(z[[1][1]],start=3,stop=3)
substr(z[[1]][1],start=3,stop=3)
gsub("?",",",y)
gsub("?","0",y)
y
gsub(",?,",",",y)
gsub("?,?",",",y)
iconv(y,"UTF-8","BIG-5")
class(y)
conv(y,"UTF-8","BIG-5")
iconv(y,"UTF-8","BIG-5")
View(lotto.Num)
library(RJSONIO)
fromJSON('[1, "2", 3]')
fromJSON('[ 1, 2, 3]', asText=TRUE)
fromJSON(I('[ 1, 2, 3]'))
fromJSON('[1, "2", 3]', simplify=TRUE)
fromJSON('[1, "2", 3]', simplify=FALSE)
library(RHTMLForms)
install.packages("RTHMLForms")
library(RHTMLForms)
install.packages("RTHMLForms",type="source")
installr()
install.packages("installr")
installr()
hpc <- read.csv("HPC.txt",characterAsString = False)
?read.csv
hpc <- read.csv("HPC.txt",stringAsFactor = False)
hpc <- read.csv("HPC.txt",stringAsFactor = FALSE)
hpc <- read.csv("HPC.txt",header = TRUE,sep = ";")
View(hpc)
url <- "https://drive.google.com/file/d/0BxBqPfuNjQtlZUFUZmxHVVNsQkk/view?usp=sharing"
download.file(url,destfile = "test.txt",method = "curl")
download.file("https://github.com/DanielTP/ExData_CP1/blob/master/HPC.txt",destfile = "test.txt",method = "curl")
library(lubridate)
Sys.setlocale("LC_TIME","US")
str2date <- function(bform) {
str_y <- substr(bform,start = 7,stop = 8)
str_md <- substr(bform,start = 1, stop =4)
str_fit <- paste0(str_md,str_y)
strptime(str_fit,"%d/%m/%y")
}
hpc <- read.csv("hpc.txt",sep=";")
hpc$Date <- str2date(hpc[,1])
hpc$wday <- weekdays(hpc[,10])
index <- which(hpc$Date == "2007-02-02")
plot(hpc[,3], xlab = "", ylab = "Global_active_power (kilowatts)", type = "l", xaxt = "n")
setwd("D:/R_Practice/EXData_CP1")
hpc <- read.csv("hpc.txt",sep=";")
hpc$Date <- str2date(hpc[,1])
hpc$wday <- weekdays(hpc[,10])
index <- which(hpc$Date == "2007-02-02")
plot(hpc[,3], xlab = "", ylab = "Global_active_power (kilowatts)", type = "l", xaxt = "n")
axis(1, at= c("0",as.character(index[1]),"2880"), labels = c("Thu","Fri","Sat"), xlab = "")
dev.copy(png, file = "plot2.png",width = 480, height = 480)
dev.off()
hist(hpc$Global_active_power,main = "Global Active Power",xlab="Global Active Power (kilowatts)",col="red")
dev.copy(png, file = "plot1.png", width =480, height = 480)
dev.off()
hpc <- read.csv("hpc.txt",sep=";")
index <- which(hpc[,1] == "2007-02-02")
index <- which(hpc[,1] == "2/2/2007")
plot(hpc[,3], xlab = "", ylab = "Global_active_power (kilowatts)", type = "l", xaxt = "n")
axis(1, at= c("0",as.character(index[1]),"2880"), labels = c("Thu","Fri","Sat"), xlab = "")
dev.copy(png, file = "plot2.png",width = 480, height = 480)
dev.off()
plot(hpc$Sub_meeting_1, xlab = "", ylab = "Energy sub metering", type = "l", xaxt = "n")
